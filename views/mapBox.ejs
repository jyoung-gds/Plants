<head>
  <meta charset="utf-8">
  <title>Demo: Getting started with the Mapbox Directions API</title>
  <meta name="robots" content="noindex, nofollow">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://api.tiles.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.js"></script>
  <link href="https://api.tiles.mapbox.com/mapbox-gl-js/v2.6.1/mapbox-gl.css" rel="stylesheet">
  <style>
    body {
      margin: 0;
      padding: 0;
    }
    #map {
      /* position: absolute; */
      /* top: 0;
      bottom: 0;
      width: 100%; */
      margin-top: 75px;
      width: 100%; 
      height: 600px;
    }
    #instructions {
      position: absolute;
      margin: 20px;
      /* margin-top: 400px; */
      width: 25%;
      top: 450px;
      bottom: 20%;
      height:400px;
      padding: 20px;
      background-color: #fff;
      overflow-y: scroll;
      font-family: sans-serif;
    }
  </style>
 <script src="https://js.sentry-cdn.com/9c5feb5b248b49f79a585804c259febc.min.js" crossorigin="anonymous"></script>
  </head>
  <body>
    <h3 class='pageTitle'>Find a community garden near you</h3>
    <h4 style='text-align: center; font-size: 20px;font-weight: normal;'>Let's be realistic, we aren't all green fingered so why don't we leverage existing communities to collectively build gardens.</h4>

    <div id="map" class="mapboxgl-map"><div class="mapboxgl-canary" style="visibility: hidden;"></div><div class="mapboxgl-canvas-container mapboxgl-interactive mapboxgl-touch-drag-pan mapboxgl-touch-zoom-rotate"><canvas class="mapboxgl-canvas" tabindex="0" aria-label="Map" role="region" width="794" height="704" style="width: 794px; height: 704px;"></canvas></div><div class="mapboxgl-control-container"><div class="mapboxgl-ctrl-top-left"></div><div class="mapboxgl-ctrl-top-right"></div><div class="mapboxgl-ctrl-bottom-left"><div class="mapboxgl-ctrl" style="display: block;"><a class="mapboxgl-ctrl-logo" target="_blank" rel="noopener nofollow" href="https://www.mapbox.com/" aria-label="Mapbox logo"></a></div></div><div class="mapboxgl-ctrl-bottom-right"><div class="mapboxgl-ctrl mapboxgl-ctrl-attrib"><button class="mapboxgl-ctrl-attrib-button" type="button" aria-label="Toggle attribution"><span class="mapboxgl-ctrl-icon" aria-hidden="true" title="Toggle attribution"></span></button><div class="mapboxgl-ctrl-attrib-inner" role="list"><a href="https://www.mapbox.com/about/maps/" target="_blank" title="Mapbox" aria-label="Mapbox" role="listitem">Â© Mapbox</a> <a href="https://www.openstreetmap.org/about/" target="_blank" title="OpenStreetMap" aria-label="OpenStreetMap" role="listitem">Â© OpenStreetMap</a> <a class="mapbox-improve-map" href="https://apps.mapbox.com/feedback/?owner=mapbox&amp;id=streets-v11&amp;access_token=pk.eyJ1IjoiZXhhbXBsZXMiLCJhIjoiY2p0MG01MXRqMW45cjQzb2R6b2ptc3J4MSJ9.zA2W0IkI0c6KaAhJfk9bWg" target="_blank" title="Improve this map" aria-label="Map feedback" role="listitem" rel="noopener nofollow">Improve this map</a></div></div></div></div></div>
    <div id="instructions"><p><strong>Trip duration: 0 min ðŸš´ </strong></p><ol><li>Head east</li><li>You have arrived at your destination</li></ol></div>
    <script>
      mapboxgl.accessToken = 'pk.eyJ1IjoiZXhhbXBsZXMiLCJhIjoiY2p0MG01MXRqMW45cjQzb2R6b2ptc3J4MSJ9.zA2W0IkI0c6KaAhJfk9bWg';
      const map = new mapboxgl.Map({
        container: 'map', // container id
        style: 'mapbox://styles/mapbox/streets-v11', // stylesheet location
        center: [-0.12764739999999997, 51.507321899999994], // starting position
        zoom: 10 // starting zoom
      });


      // an arbitrary start will always be the same
      // only the end or destination will change
      const start = [-0.12764739999999997, 51.507321899999994];

      // create a function to make a directions request
      async function getRoute(end) {
        // make directions request using cycling profile
        const query = await fetch(
          `https://api.mapbox.com/directions/v5/mapbox/driving/${start[0]},${start[1]};${end[0]},${end[1]}?steps=true&geometries=geojson&access_token=${mapboxgl.accessToken}`,
          { method: 'GET' }
        );
        const json = await query.json();
        const data = json.routes[0];
        const route = data.geometry.coordinates;
        const geojson = {
          'type': 'Feature',
          'properties': {},
          'geometry': {
            'type': 'LineString',
            'coordinates': route
          }
        };
        // if the route already exists on the map, we'll reset it using setData
        if (map.getSource('route')) {
          map.getSource('route').setData(geojson);
        }
        // otherwise, we'll make a new request
        else {
          map.addLayer({
            'id': 'route',
            'type': 'line',
            'source': {
              'type': 'geojson',
              'data': geojson
            },
            'layout': {
              'line-join': 'round',
              'line-cap': 'round'
            },
            'paint': {
              'line-color': '#3887be',
              'line-width': 5,
              'line-opacity': 0.75
            }
          });
        }

        // get the sidebar and add the instructions
        const instructions = document.getElementById('instructions');
        const steps = data.legs[0].steps;

        let tripInstructions = '';
        for (const step of steps) {
          tripInstructions += `<li>${step.maneuver.instruction}</li>`;
        }
        instructions.innerHTML = `<p><strong>Trip duration: ${Math.floor(
          data.duration / 60
        )} min ðŸš—  </strong></p><ol>${tripInstructions}</ol>`;
      }

      map.on('load', () => {
        // make an initial directions request that
        // starts and ends at the same location
        getRoute(start);

        // Add destination to the map
        map.addLayer({
          'id': 'point',
          'type': 'circle',
          'source': {
            'type': 'geojson',
            'data': {
              'type': 'FeatureCollection',
              'features': [
                {
                  'type': 'Feature',
                  'properties': {},
                  'geometry': {
                    'type': 'Point',
                    'coordinates': start
                  }
                }
              ]
            }
          },
          'paint': {
            'circle-radius': 10,
            'circle-color': '#3887be'
          }
        });

        // allow the user to click the map to change the destination
        map.on('click', (event) => {
          const coords = Object.keys(event.lngLat).map(
            (key) => event.lngLat[key]
          );
          const end = {
            'type': 'FeatureCollection',
            'features': [
              {
                'type': 'Feature',
                'properties': {},
                'geometry': {
                  'type': 'Point',
                  'coordinates': coords
                }
              }
            ]
          };
          if (map.getLayer('end')) {
            map.getSource('end').setData(end);
          } else {
            map.addLayer({
              'id': 'end',
              'type': 'circle',
              'source': {
                'type': 'geojson',
                'data': {
                  'type': 'FeatureCollection',
                  'features': [
                    {
                      'type': 'Feature',
                      'properties': {},
                      'geometry': {
                        'type': 'Point',
                        'coordinates': coords
                      }
                    }
                  ]
                }
              },
              'paint': {
                'circle-radius': 10,
                'circle-color': '#f30'
              }
            });
          }
          getRoute(coords);
        });
      });

      // Ability to zoom in and out 
      map.addControl(new mapboxgl.NavigationControl());

      // create the popup
      const popupMarchmont = new mapboxgl.Popup({ offset: 25 }).setText(
      'Marchmont Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.1248, 51.5251])
      .setPopup(popupMarchmont) // sets a popup on this marker
      .addTo(map);

      // create the popup
      const popupCulpeper = new mapboxgl.Popup({ offset: 25 }).setText(
      'Culpeper Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.1096, 51.5348])
      .setPopup(popupCulpeper) // sets a popup on this marker
      .addTo(map);

      // create the popup
      const popupCottington = new mapboxgl.Popup({ offset: 25 }).setText(
      'Cottington Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.1060, 51.4902])
      .setPopup(popupCottington) // sets a popup on this marker
      .addTo(map);
      
      // create the popup
      const popupPhoenix = new mapboxgl.Popup({ offset: 25 }).setText(
      'Phoenix Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.1286, 51.5146])
      .setPopup(popupPhoenix) // sets a popup on this marker
      .addTo(map);

      // create the popup
      const popupEmslie = new mapboxgl.Popup({ offset: 25 }).setText(
      'Emslie Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.2105, 51.5246])
      .setPopup(popupEmslie) // sets a popup on this marker
      .addTo(map);
      
      // create the popup
      const popupGodolphin = new mapboxgl.Popup({ offset: 25 }).setText(
      'Godolphin Community Garden.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.2323, 51.5038])
      .setPopup(popupGodolphin) // sets a popup on this marker
      .addTo(map);

      // create the popup
      const popupBrockwell = new mapboxgl.Popup({ offset: 25 }).setText(
      'Brockwell Park Community Greenhouses.'
      );

      // // create the marker
      new mapboxgl.Marker({
        color:'#eb9915' })
      .setLngLat([0.1086, 51.4504])
      .setPopup(popupBrockwell) // sets a popup on this marker
      .addTo(map);



    </script>
  

</body>